{"remainingRequest":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue","mtime":1636564371154},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGRhZ3JlIGZyb20gImN5dG9zY2FwZS1kYWdyZSI7CmltcG9ydCBjeHRtZW51IGZyb20gImN5dG9zY2FwZS1jeHRtZW51IjsKaW1wb3J0IGVkZ2VoYW5kbGVzIGZyb20gImN5dG9zY2FwZS1lZGdlaGFuZGxlcyI7CmltcG9ydCBuYXZpZ2F0b3IgZnJvbSAiY3l0b3NjYXBlLW5hdmlnYXRvciI7CmltcG9ydCBwYW56b29tIGZyb20gImN5dG9zY2FwZS1wYW56b29tIjsKaW1wb3J0IE1ZX0pTT04gZnJvbSAnLi4vdGVzdF9kYXRhL2RhdGFfbG93ZXMuanNvbic7CmltcG9ydCB7IGpzb25EYXRhIH0gZnJvbSAiLi4vZGF0YS9kYXRhIjsKaW1wb3J0IHsgc2VsZWN0ZWROb2RlIH0gZnJvbSAiLi4vZGF0YS9zZWxlY3RlZCI7IC8vaW1wb3J0IHsgZ2VuIH0gZnJvbSAiLi4vZGF0YS9nZW4iCgppbXBvcnQgSlNPTlZVRSBmcm9tICcuL0pTT04udnVlJzsKaW1wb3J0IHVuZG9SZWRvIGZyb20gImN5dG9zY2FwZS11bmRvLXJlZG8iOwppbXBvcnQgZGF0YUdlbiBmcm9tICcuLi90ZXN0X2RhdGEvZGF0YV9sb3dlcy5qc29uJzsKCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKS5kZWZhdWx0OwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDeXRvc2NhcGVHcmFwaCIsCiAgbXlKc29uOiBNWV9KU09OLAogIGpzb25WdWU6IEpTT05WVUUsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICBjb21wdXRlZDogewogICAgY3lJbnN0YW5jZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuY3kuaW5zdGFuY2U7CiAgICB9LAoKICAgIC8vIGRhdGEoKSB7CiAgICAvLyAgIGNvbnN0IG5vZGVTID0gc2VsZWN0ZWROb2RlLnN0YXRlLm5vZGUKICAgIC8vICAgcmV0dXJuIFtub2RlU10KICAgIC8vIH0sCiAgICBkYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5vZGVTOiBbc2VsZWN0ZWROb2RlLnN0YXRlLm5vZGVdLAogICAgICAgIGdlbjogewogICAgICAgICAgU3RvcmU6ICIxIgogICAgICAgIH0sCiAgICAgICAgdmFsdWU6IHNlbGVjdGVkTm9kZS5zdGF0ZS5hbW91bnQKICAgICAgfTsKICAgIH0sCgogICAgZWxlbWVudHMoKSB7CiAgICAgIGNvbnN0IG5vZGVzID0ganNvbkRhdGEuc3RhdGUuanNvbi5ub2RlczsKICAgICAgY29uc29sZS5sb2coIkVMRVMiKTsKICAgICAgY29uc29sZS5sb2cobm9kZXMpOwogICAgICBjb25zdCBlZGdlcyA9IGpzb25EYXRhLnN0YXRlLmpzb24uZWRnZXM7CiAgICAgIHJldHVybiBbLi4ubm9kZXMsIC4uLmVkZ2VzXTsKICAgIH0sCgogICAgY29uZmlnKCkgewogICAgICByZXR1cm4gewogICAgICAgIGVkaXQ6ICcnLAogICAgICAgIGJveFNlbGVjdGlvbkVuYWJsZWQ6IGZhbHNlLAogICAgICAgIHN0eWxlOiBbewogICAgICAgICAgc2VsZWN0b3I6ICJub2RlW25hbWVdIiwKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdjb250ZW50JzogJ2RhdGEobmFtZSknLAogICAgICAgICAgICAndGV4dC12YWxpZ24nOiAnY2VudGVyJywKICAgICAgICAgICAgJ3RleHQtaGFsaWduJzogJ2NlbnRlcicKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBzZWxlY3RvcjogJzpwYXJlbnQnLAogICAgICAgICAgY3NzOiB7CiAgICAgICAgICAgICd0ZXh0LXZhbGlnbic6ICdjZW50ZXInLAogICAgICAgICAgICAndGV4dC1oYWxpZ24nOiAnY2VudGVyJwogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHNlbGVjdG9yOiAnOnNlbGVjdGVkJywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogJ2JsdWUnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgc2VsZWN0b3I6ICdlZGdlJywKICAgICAgICAgIGNzczogewogICAgICAgICAgICAnY3VydmUtc3R5bGUnOiAnYmV6aWVyJywKICAgICAgICAgICAgJ3RhcmdldC1hcnJvdy1zaGFwZSc6ICd0cmlhbmdsZS10ZWUnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgc2VsZWN0b3I6ICcuZWgtaGFuZGxlJywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogJ3JlZCcsCiAgICAgICAgICAgICd3aWR0aCc6IDEyLAogICAgICAgICAgICAnaGVpZ2h0JzogMTIsCiAgICAgICAgICAgICdzaGFwZSc6ICdlbGxpcHNlJywKICAgICAgICAgICAgJ292ZXJsYXktb3BhY2l0eSc6IDAsCiAgICAgICAgICAgICdib3JkZXItd2lkdGgnOiAxMiwKICAgICAgICAgICAgLy8gbWFrZXMgaGFuZGxlIGVhc2llciB0byBoaXQKICAgICAgICAgICAgJ2JvcmRlci1vcGFjaXR5JzogMAogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIHNlbGVjdG9yOiAnLmVoLWhvdmVyJywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogJ2JsdWUnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgc2VsZWN0b3I6ICcuZWgtc291cmNlJywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdib3JkZXItd2lkdGgnOiAyLAogICAgICAgICAgICAnYm9yZGVyLWNvbG9yJzogJ2JsdWUnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgc2VsZWN0b3I6ICcuZWgtdGFyZ2V0JywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdib3JkZXItd2lkdGgnOiAyLAogICAgICAgICAgICAnYm9yZGVyLWNvbG9yJzogJ2JsdWUnCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgc2VsZWN0b3I6ICcuZWgtcHJldmlldywgLmVoLWdob3N0LWVkZ2UnLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgJ2xpbmUtY29sb3InOiAnYmx1ZScsCiAgICAgICAgICAgICd0YXJnZXQtYXJyb3ctY29sb3InOiAnYmx1ZScsCiAgICAgICAgICAgICdzb3VyY2UtYXJyb3ctY29sb3InOiAnYmx1ZScKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBzZWxlY3RvcjogJy5laC1naG9zdC1lZGdlLmVoLXByZXZpZXctYWN0aXZlJywKICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICdvcGFjaXR5JzogMAogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIGxheW91dDogewogICAgICAgICAgbmFtZTogImRhZ3JlIgogICAgICAgIH0KICAgICAgfTsKICAgIH0KCiAgfSwKICBtZXRob2RzOiB7CiAgICBwcmVDb25maWcoY3l0b3NjYXBlKSB7CiAgICAgIGN5dG9zY2FwZS51c2UoZGFncmUpOwogICAgICBjeXRvc2NhcGUudXNlKGN4dG1lbnUpOwogICAgICBjeXRvc2NhcGUudXNlKGVkZ2VoYW5kbGVzKTsKICAgICAgY3l0b3NjYXBlLnVzZShuYXZpZ2F0b3IpOwogICAgICBjeXRvc2NhcGUudXNlKHBhbnpvb20pOwogICAgICBjeXRvc2NhcGUudXNlKHVuZG9SZWRvKTsKICAgIH0sCgogICAgb25TdWJtaXQoZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhKTsKICAgICAgYWxlcnQoSlNPTi5zdHJpbmdpZnkodGhpcy5mb3JtKSk7CiAgICB9LAoKICAgIGVkaXRCb3goZWxlbWVudCkgewogICAgICBjb25zdCBoID0gdGhpcy4kY3JlYXRlRWxlbWVudDsKICAgICAgY29uc3QgbWVzc2FnZU5vZGUgPSBoKCdkaXYnLCB7CiAgICAgICAgY2xhc3M6IFsnZm9vYmFyJ10KICAgICAgfSwgW2goJ2ItZm9ybScsICdIZWxsbycpXSk7CiAgICAgIGNvbnNvbGUubG9nKGVsZW1lbnQpOwogICAgICB0aGlzLmVkaXQgPSAnJzsKICAgICAgdGhpcy4kYnZNb2RhbC5tc2dCb3hDb25maXJtKFttZXNzYWdlTm9kZV0pLnRoZW4odmFsdWUgPT4gewogICAgICAgIHRoaXMuZWRpdCA9IHZhbHVlOwogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfSwKCiAgICBzZWxlY3ROb2RlKG5vZGUpIHsKICAgICAgLy9jb25zb2xlLmxvZyhub2RlKTsKICAgICAgc2VsZWN0ZWROb2RlLmNvbW1pdCgnY2hhbmdlTm9kZScsIG5vZGUpOwogICAgfSwKCiAgICBjaGFuZ2VHZW4odmFsKSB7CiAgICAgIC8vY29uc29sZS5sb2codmFsKTsKICAgICAgc2VsZWN0ZWROb2RlLmNvbW1pdCgnY2hhbmdlR2VuJywgdmFsKTsKICAgIH0sCgogICAgdGVzdCgpIHsKICAgICAgZ2V0VGhlRmlsZSgpOwogICAgfSwKCiAgICByZWRyYXcoY3kpIHsKICAgICAgdmFyIG15X2xheW91dCA9IGN5Lm1ha2VMYXlvdXQoewogICAgICAgIG5hbWU6ICdkYWdyZScKICAgICAgfSk7CiAgICAgIG15X2xheW91dC5ydW4oKTsKICAgIH0sCgogICAgZ2VuZXJhdGVEYXRhKHZhbHVlKSB7CiAgICAgIGNvbnNvbGUubG9nKHZhbHVlKTsKICAgICAgY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKTsKICAgICAgY29uc29sZS5sb2coZGF0YUdlbik7CiAgICAgIGNvbnNvbGUubG9nKCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIik7CiAgICAgIGNvbnNvbGUubG9nKGpzb25EYXRhLmdldHRlcnMuZ2V0Tm9kZSk7IC8vanNvbkRhdGEuY29tbWl0KCdzYXZlRGF0YScpCgogICAgICBheGlvcy5wb3N0KCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvZ2V0RGF0YT9ub19zYW1wbGVzPScgKyB2YWx1ZSwganNvbkRhdGEuZ2V0dGVycy5nZXROb2RlKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZygiLS0tLS0tLS0tLS0tLS0tLS0qKioqKioqLS0tLS0tLS0tLS0tLS0tLS0tLS0iKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7IC8vY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkKCiAgICAgICAgc2F2ZUpTT04ocmVzcG9uc2UuZGF0YSwgJ2dlbkRhdGEtJyArIHZhbHVlICsgJy5qc29uJyk7IC8vanNvbkRhdGEuY29tbWl0KCdhZGREYXRhJywgcmVzcG9uc2UpCiAgICAgICAgLy90aGlzLmdlbiA9IHJlc3BvbnNlLmRhdGEKICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuZ2VuKQogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCgogICAgZGVsZXRlTm9kZShub2RlKSB7CiAgICAgIC8vc2VsZWN0ZWROb2RlLmNvbW1pdCgnY2hhbmdlTm9kZScsIG5vZGUgKTsKICAgICAgY29uc29sZS5sb2coIkRFTEVURSIpOwogICAgICBjb25zb2xlLmxvZyhub2RlLmlkKTsgLy90aGlzLm5vZGVTID0gbnVsbAogICAgICAvL3VyLmRvKCJyZW1vdmUiLCBzZWxlY3RlZE5vZGUuc3RhdGUubm9kZSk7CgogICAgICBqc29uRGF0YS5jb21taXQoJ3JlbW92ZU5vZGUnLCBub2RlLmlkKTsKICAgIH0sCgogICAgYWRkTm9kZShldmVudCkgewogICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQsIHRoaXMuJHJlZnMuY3kuaW5zdGFuY2UpOwogICAgICBjb25zb2xlLmxvZyhldmVudC5wb3NpdGlvbik7CgogICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSB0aGlzLiRyZWZzLmN5Lmluc3RhbmNlKSB7CiAgICAgICAgY29uc29sZS5sb2coImFkZGluZyBub2RlIiwgZXZlbnQudGFyZ2V0KTsKICAgICAgfQoKICAgICAgdmFyIG5vZGVpZCA9IDA7CiAgICAgIG5vZGVpZCA9IG1ha2VpZCg1KTsKICAgICAgdmFyIG9iaiA9IHsKICAgICAgICBkYXRhOiB7CiAgICAgICAgICAiaWQiOiAieF8iICsgbm9kZWlkLAogICAgICAgICAgIm5hbWUiOiAiTmV3IE5vZGUiLAogICAgICAgICAgInR5cGUiOiAibm9kZVR5cGUiLAogICAgICAgICAgIm1pbiI6IDAsCiAgICAgICAgICAibWF4IjogMAogICAgICAgIH0sCiAgICAgICAgcG9zaXRpb246IGV2ZW50LnBvc2l0aW9uCiAgICAgIH07CiAgICAgIGpzb25EYXRhLmNvbW1pdCgnYWRkTm9kZScsIG9iaik7CiAgICAgIHNlbGVjdGVkTm9kZS5jb21taXQoJ2NoYW5nZU5vZGUnLCBvYmouZGF0YSk7CiAgICB9LAoKICAgIGVkaXROb2RlKGV2ZW50LCBpZCkgewogICAgICBjb25zdCBlbGUgPSB0aGlzLmVsZW1lbnRzLnNvbWUoKGVsZSwgaW5kZXgpID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhlbGUuZGF0YS5pZCk7CiAgICAgICAgY29uc29sZS5sb2coaWQpOwogICAgICAgIGNvbnN0IG1hdGNoID0gZWxlLmRhdGEuaWQgPT0gaWQ7CgogICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgY29uc29sZS5sb2coIkluZGV4IiArIGluZGV4KTsgLy9qc29uRGF0YS5jb21taXQoJ3JlbW92ZU5vZGUnLCBlbGUuaWQoKSkKICAgICAgICB9CgogICAgICAgIHJldHVybiBtYXRjaDsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKGV2ZW50KTsKICAgICAgY29uc29sZS5sb2coZWxlKTsKICAgIH0sCgogICAgdXBkYXRlTm9kZShldmVudCkgewogICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQuZGF0YSgpLmxhYmVsKTsKICAgICAgbGV0IGxhYmVsID0gZXZlbnQudGFyZ2V0LmRhdGEoKS5sYWJlbDsKICAgICAgbGFiZWwgKz0gbGFiZWxbMF07CiAgICAgIGV2ZW50LnRhcmdldC5kYXRhKHsKICAgICAgICBsYWJlbAogICAgICB9KTsKICAgIH0sCgogICAgYWZ0ZXJDcmVhdGVkKGN5KSB7CiAgICAgIC8vY3kubWFrZUxheW91dCh7bmFtZTogJ2RhZ3JlJ30pLnJ1bigpCiAgICAgIGNvbnNvbGUubG9nKCJzZWxlY3RlZE5vZGUiKTsgLy92YXIgc2VsID0gc2VsZWN0ZWROb2RlLmdldHRlcnMuZ2V0Tm9kZSAKCiAgICAgIGN5LnBhbih7CiAgICAgICAgeDogMzAwLAogICAgICAgIHk6IDE2MAogICAgICB9KTsKICAgICAgY3kuem9vbSgyKTsKICAgICAgdmFyIHVyID0gY3kudW5kb1JlZG8oewogICAgICAgIGlzRGVidWc6IHRydWUKICAgICAgfSk7IC8vY29uc29sZS5sb2coIk5FVyBKU09OOiAiICsganNvbkRhdGEuc3RhdGUuanNvbi5ub2RlcykKICAgICAgLy9jb25zb2xlLmxvZygiTkVXIFZVRTogIikKICAgICAgLy9jb25zb2xlLmxvZyhqc29uVnVlKQogICAgICAvL2NvbnNvbGUubG9nKCJWVUVYIENBTEwgX19fXyA6ICIgKyB0aGlzLiRqc29uRGF0YSkKICAgICAgLy9jb25zb2xlLmxvZygiT0xEIEpTT046ICIgKyBNWV9KU09OKQogICAgICAvL3ZhciBqc29uRmlsZSA9IEpTT04uc3RyaW5naWZ5KGpzb25EYXRhLnN0YXRlKTsKICAgICAgLy92YXIganNvbkZpbGUgPSBKU09OLnN0cmluZ2lmeShqc29uRGF0YS5zdGF0ZS5qc29uKTsKICAgICAgLy92YXIgbGlzdCA9IEpTT04ucGFyc2UoanNvbkZpbGUpOwogICAgICAvLyBjeS5qc29uKHsgZWxlbWVudHM6IGxpc3QgfSk7CiAgICAgIC8vIHZhciBteV9sYXlvdXQgPSBjeS5tYWtlTGF5b3V0KHtuYW1lOiAnZGFncmUnfSk7CiAgICAgIC8vIG15X2xheW91dC5ydW4oKTsKICAgICAgLy8gY3kuY3h0bWVudSh7CiAgICAgIC8vICAgICBzZWxlY3RvcjogJ25vZGUnLAogICAgICAvLyAgICAgY29tbWFuZHM6IFsKICAgICAgLy8gICAgICAgewogICAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICdFZGl0IFtOL0FdJywKICAgICAgLy8gICAgICAgICBzZWxlY3Q6IGZ1bmN0aW9uKGVsZSl7CiAgICAgIC8vICAgICAgICAgICB2YXIgbnVtIAogICAgICAvLyAgICAgICAgICAgdmFyIGN1cnJlbnROYW1lID0gZWxlLl9wcml2YXRlLmRhdGEubmFtZQogICAgICAvLyAgICAgICAgICAgdmFyIGVkaXROYW1lID0gcHJvbXB0KCJQbGVhc2UgZW50ZXIgbmFtZSIsICJOZXcgTmFtZSIpCiAgICAgIC8vICAgICAgICAgICBqc29uRGF0YS5zdGF0ZS5qc29uLm5vZGVzLmZvckVhY2goKGVsZW1lbnQsIGluZGV4KSA9PiB7CiAgICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJDSEFHRSBOQU1FIElORk86ICIgKyBlbGVtZW50LmRhdGEubmFtZSkKICAgICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coIkNIQUdFIE5BTUUgSU5GTzogIiArIGN1cnJlbnROYW1lKQogICAgICAvLyAgICAgICAgICAgICBjb25zb2xlLmxvZygiTlVNOiAiICsgaW5kZXgpCiAgICAgIC8vICAgICAgICAgICAgIGlmIChjdXJyZW50TmFtZSA9PSBlbGVtZW50LmRhdGEubmFtZSkge251bSA9IGluZGV4fQogICAgICAvLyAgICAgICAgICAgfSk7CiAgICAgIC8vICAgICAgICAgICBjb25zb2xlLmxvZygiQ0hBR0UgTlVNQlZFUiBJTkZPOiAiICsgbnVtKQogICAgICAvLyAgICAgICAgICAgZWxlLmRhdGEoJ25hbWUnLCBlZGl0TmFtZSk7CiAgICAgIC8vICAgICAgICAgICBjb25zb2xlLmxvZyhlbGUuX3ByaXZhdGUuZGF0YSk7CiAgICAgIC8vICAgICAgICAgICB2YXIgcGF5bG9hZCA9IHsna2V5MSc6IGVkaXROYW1lLCAia2V5MiI6IG51bX0KICAgICAgLy8gICAgICAgICAgIGpzb25EYXRhLmNvbW1pdCgnY2hhbmdlTmFtZScsIHBheWxvYWQgKTsKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgIH0sCiAgICAgIC8vICAgICAgIHsKICAgICAgLy8gICAgICAgICBjb250ZW50OiAnRGVsZXRlJywKICAgICAgLy8gICAgICAgICBzZWxlY3Q6IGZ1bmN0aW9uKGVsZSl7CiAgICAgIC8vICAgICAgICAgICBjb25zb2xlLmxvZyggZWxlICk7CiAgICAgIC8vICAgICAgICAgICAvL2N5LnJlbW92ZSgnIycgKyBlbGUuaWQoKSk7CiAgICAgIC8vICAgICAgICAgICBqc29uRGF0YS5jb21taXQoJ3JlbW92ZU5vZGUnLCBlbGUuaWQoKSkKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgIH0sIAogICAgICAvLyAgICAgICB7CiAgICAgIC8vICAgICAgICAgY29udGVudDogJ09wZW4nLAogICAgICAvLyAgICAgICAgIHNlbGVjdDogZnVuY3Rpb24oZWxlKXsKICAgICAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKCBlbGUuaWQoKSApOwogICAgICAvLyAgICAgICAgICAgY29uc29sZS5sb2coIGVsZS5kYXRhKCduYW1lJykgKTsKICAgICAgLy8gICAgICAgICAgIC8vdGhpcy5idXR0b24oKQogICAgICAvLyAgICAgICAgICAgdGhpcy4kcG9wdXAoJ2FwcGVuZCcsICdmb29iYXInKQogICAgICAvLyAgICAgICAgICAgLy9hbGVydCggIk5hbWU6ICIgKyBlbGUuZGF0YSgnbmFtZScpICArIlxuVHlwZTogIiArIGVsZS5kYXRhKCd0eXBlJykpOwogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgfQogICAgICAvLyAgICAgXQogICAgICAvLyAgIH0pOwoKICAgICAgY3kuY3h0bWVudSh7CiAgICAgICAgc2VsZWN0b3I6ICdjb3JlJywKICAgICAgICBjb21tYW5kczogWy8vIHsKICAgICAgICAvLyAgIGNvbnRlbnQ6ICdBZGQgTm9kZScsCiAgICAgICAgLy8gICBzZWxlY3Q6IGZ1bmN0aW9uKCl7CiAgICAgICAgLy8gICAgIC8vIFRPRE8gbmVlZCB0byBjaGVjayB3aGV0aGVyIHRoaXMgaXMgdW5pcXVlCiAgICAgICAgLy8gICAgIHZhciBub2RlaWQgPSAwOwogICAgICAgIC8vICAgICBub2RlaWQgPSBtYWtlaWQoNSk7CiAgICAgICAgLy8gICAgIC8vIGdldCBtb3VzZSBwb3NpdGlvbgogICAgICAgIC8vICAgICAvLyBUT0RPOiBtYWtlIGl0IHdvcmsgb24gdG91Y2ggc2NyZWVucwogICAgICAgIC8vICAgICB2YXIgZSA9IHdpbmRvdy5ldmVudDsKICAgICAgICAvLyAgICAgdmFyIHBvcyA9IHt4OiBlLm9mZnNldFgsIHk6IGUub2Zmc2V0WX07CiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHBvcyk7CiAgICAgICAgLy8gICAgIHZhciBub2RlTmFtZSA9IHByb21wdCgiUGxlYXNlIGVudGVyIG5hbWUiLCAiTm9kZSIpOwogICAgICAgIC8vICAgICB2YXIgbm9kZVR5cGUgPSBwcm9tcHQoIlBsZWFzZSBlbnRlciB0eXBlIiwgIlR5cGUiKTsKICAgICAgICAvLyAgICAgLy8gY3kuYWRkKHsKICAgICAgICAvLyAgICAgLy8gICAiZ3JvdXAiOiAibm9kZXMiLAogICAgICAgIC8vICAgICAvLyAgICJkYXRhIjogeyJpZCI6ICJ4XyIgKyBub2RlaWQsICJuYW1lIjogbm9kZU5hbWUsICJ0eXBlIjogbm9kZVR5cGUsICJtaW4iOiAwLCAibWF4IjogMH0sCiAgICAgICAgLy8gICAgIC8vICAgcmVuZGVyZWRQb3NpdGlvbjogcG9zCiAgICAgICAgLy8gICAgIC8vIH0pCiAgICAgICAgLy8gICAgIHZhciBvYmogPSB7CiAgICAgICAgLy8gICAgICAgZGF0YTogeyJpZCI6ICJ4XyIgKyBub2RlaWQsICJuYW1lIjogbm9kZU5hbWUsICJ0eXBlIjogbm9kZVR5cGUsICJtaW4iOiAwLCAibWF4IjogMH0sCiAgICAgICAgLy8gICAgICAgcG9zaXRpb246IHBvcwogICAgICAgIC8vICAgICB9CiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKG9iaik7CiAgICAgICAgLy8gICAgIC8vdmFyIHBheWxvYWQgPSB7J2tleTEnOiBvYmp9CiAgICAgICAgLy8gICAgIGpzb25EYXRhLmNvbW1pdCgnYWRkTm9kZScsIG9iaiApOwogICAgICAgIC8vICAgfQogICAgICAgIC8vIH0sCiAgICAgICAgewogICAgICAgICAgY29udGVudDogJ1JlZHJhdycsCiAgICAgICAgICBzZWxlY3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIG15X2xheW91dCA9IGN5Lm1ha2VMYXlvdXQoewogICAgICAgICAgICAgIG5hbWU6ICdkYWdyZScKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIG15X2xheW91dC5ydW4oKTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBjb250ZW50OiAnVW5kbyBbTi9BXScsCiAgICAgICAgICBzZWxlY3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coIlVORE86ICIpOwogICAgICAgICAgICBjb25zb2xlLmxvZyh1cik7CiAgICAgICAgICAgIHVyLnVuZG8oKTsgLy9lbGVzLnJlc3RvcmUoKTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBjb250ZW50OiAnU2F2ZSBKU09OJywKICAgICAgICAgIHNlbGVjdDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBjeS5yZW1vdmUoJy5laC1oYW5kbGUnKTsKICAgICAgICAgICAgc2F2ZUpTT04oY3kuanNvbigpWydlbGVtZW50cyddLCAnZGF0YV9teURhdGEuanNvbicpOwogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0pOwogICAgICBjeS5jeHRtZW51KHsKICAgICAgICBzZWxlY3RvcjogJ2VkZ2UnLAogICAgICAgIGNvbW1hbmRzOiBbewogICAgICAgICAgY29udGVudDogJ0ludmVydCcsCiAgICAgICAgICBzZWxlY3Q6IGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZWxlLmRhdGEoJ3NvdXJjZScpICsgJy0+JyArIGVsZS5kYXRhKCd0YXJnZXQnKSk7CiAgICAgICAgICAgIHZhciBlbGVfbmV3ID0gZWxlLmNsb25lKCk7CiAgICAgICAgICAgIGVsZV9uZXcuZGF0YSgpLnNvdXJjZSA9IGVsZS5kYXRhKCkudGFyZ2V0OwogICAgICAgICAgICBlbGVfbmV3LmRhdGEoKS50YXJnZXQgPSBlbGUuZGF0YSgpLnNvdXJjZTsKICAgICAgICAgICAgY3kucmVtb3ZlKCcjJyArIGVsZS5pZCgpKTsKICAgICAgICAgICAgY3kuYWRkKGVsZV9uZXcpOwogICAgICAgICAgfSAvL2VuYWJsZWQ6IGZhbHNlCgogICAgICAgIH0sIHsKICAgICAgICAgIGNvbnRlbnQ6ICdEZWxldGUnLAogICAgICAgICAgc2VsZWN0OiBmdW5jdGlvbiAoZWxlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVsZS5pZCgpKTsKICAgICAgICAgICAgY3kucmVtb3ZlKCcjJyArIGVsZS5pZCgpKTsKICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9KTsKICAgICAgbGV0IGVoID0gY3kuZWRnZWhhbmRsZXMoewogICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgfSk7CgogICAgICBpZiAodGhpcy4kdG9nZ2xlKSB7CiAgICAgICAgZWguZW5hYmxlRHJhd01vZGUoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBlaC5kaXNhYmxlRHJhd01vZGUoKTsKICAgICAgfSAvL2VoLmRpc2FibGVEcmF3TW9kZSgpOwogICAgICAvL2VoLmVuYWJsZSgpOwogICAgICAvLyBjeS5vbignZWhzdGFydCcsIChldmVudCwgc291cmNlTm9kZSkgPT4gewogICAgICAvLyAgICAgY29uc29sZS5sb2coIkhPVkVSOiAiICsgZXZlbnQucG9zaXN0aW9uKTsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCJIT1ZFUjogIiArIHNvdXJjZU5vZGUpOwogICAgICAvLyB9KTsKCgogICAgICBjb25zb2xlLmxvZyhlaCk7CiAgICAgIGN5Lm5hdmlnYXRvcih7CiAgICAgICAgY29udGFpbmVyOiBmYWxzZSwKICAgICAgICB2aWV3TGl2ZUZyYW1lcmF0ZTogMCwKICAgICAgICB0aHVtYm5haWxFdmVudEZyYW1lcmF0ZTogMzAsCiAgICAgICAgdGh1bWJuYWlsTGl2ZUZyYW1lcmF0ZTogZmFsc2UsCiAgICAgICAgZGJsQ2xpY2tEZWxheTogMjAwLAogICAgICAgIHJlbW92ZUN1c3RvbUNvbnRhaW5lcjogdHJ1ZSwKICAgICAgICByZXJlbmRlckRlbGF5OiAxMDAKICAgICAgfSk7CiAgICAgIGN5LnBhbnpvb20oewogICAgICAgIHpvb21GYWN0b3I6IDAuMDUsCiAgICAgICAgLy8gem9vbSBmYWN0b3IgcGVyIHpvb20gdGljawogICAgICAgIHpvb21EZWxheTogNDUsCiAgICAgICAgLy8gaG93IG1hbnkgbXMgYmV0d2VlbiB6b29tIHRpY2tzCiAgICAgICAgbWluWm9vbTogMC4xLAogICAgICAgIC8vIG1pbiB6b29tIGxldmVsCiAgICAgICAgbWF4Wm9vbTogMTAsCiAgICAgICAgLy8gbWF4IHpvb20gbGV2ZWwKICAgICAgICBmaXRQYWRkaW5nOiA1MCwKICAgICAgICAvLyBwYWRkaW5nIHdoZW4gZml0dGluZwogICAgICAgIHBhblNwZWVkOiAxMCwKICAgICAgICAvLyBob3cgbWFueSBtcyBpbiBiZXR3ZWVuIHBhbiB0aWNrcwogICAgICAgIHBhbkRpc3RhbmNlOiAxMCwKICAgICAgICAvLyBtYXggcGFuIGRpc3RhbmNlIHBlciB0aWNrCiAgICAgICAgcGFuRHJhZ0FyZWFTaXplOiA3NSwKICAgICAgICAvLyB0aGUgbGVuZ3RoIG9mIHRoZSBwYW4gZHJhZyBib3ggaW4gd2hpY2ggdGhlIHZlY3RvciBmb3IgcGFubmluZyBpcyBjYWxjdWxhdGVkIChiaWdnZXIgPSBmaW5lciBjb250cm9sIG9mIHBhbiBzcGVlZCBhbmQgZGlyZWN0aW9uKQogICAgICAgIHBhbk1pblBlcmNlbnRTcGVlZDogMC4yNSwKICAgICAgICAvLyB0aGUgc2xvd2VzdCBzcGVlZCB3ZSBjYW4gcGFuIGJ5IChhcyBhIHBlcmNlbnQgb2YgcGFuU3BlZWQpCiAgICAgICAgcGFuSW5hY3RpdmVBcmVhOiA4LAogICAgICAgIC8vIHJhZGl1cyBvZiBpbmFjdGl2ZSBhcmVhIGluIHBhbiBkcmFnIGJveAogICAgICAgIHBhbkluZGljYXRvck1pbk9wYWNpdHk6IDAuNSwKICAgICAgICAvLyBtaW4gb3BhY2l0eSBvZiBwYW4gaW5kaWNhdG9yICh0aGUgZHJhZ2dhYmxlIG5pYik7IHNjYWxlcyBmcm9tIHRoaXMgdG8gMS4wCiAgICAgICAgem9vbU9ubHk6IGZhbHNlLAogICAgICAgIC8vIGEgbWluaW1hbCB2ZXJzaW9uIG9mIHRoZSB1aSBvbmx5IHdpdGggem9vbWluZyAodXNlZnVsIG9uIHN5c3RlbXMgd2l0aCBiYWQgbW91c2V3aGVlbCByZXNvbHV0aW9uKQogICAgICAgIGZpdFNlbGVjdG9yOiB1bmRlZmluZWQsCiAgICAgICAgLy8gc2VsZWN0b3Igb2YgZWxlbWVudHMgdG8gZml0CiAgICAgICAgYW5pbWF0ZU9uRml0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAvLyB3aGV0aGVyIHRvIGFuaW1hdGUgb24gZml0CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBmaXRBbmltYXRpb25EdXJhdGlvbjogMTAwMCwKICAgICAgICAvLyBkdXJhdGlvbiBvZiBhbmltYXRpb24gb24gZml0CiAgICAgICAgLy8gaWNvbiBjbGFzcyBuYW1lcwogICAgICAgIHNsaWRlckhhbmRsZUljb246ICdmYSBmYS1taW51cycsCiAgICAgICAgem9vbUluSWNvbjogJ2ZhIGZhLXBsdXMnLAogICAgICAgIHpvb21PdXRJY29uOiAnZmEgZmEtbWludXMnLAogICAgICAgIHJlc2V0SWNvbjogJ2ZhIGZhLWV4cGFuZCcKICAgICAgfSk7CiAgICAgIGltcG9zZUNvbnN0cmFpbnRzKGN5KTsgLy90aGlzLmN5SW5zdGFuY2UubWFrZUxheW91dCh7IG5hbWU6ICJkYWdyZSIgfSkucnVuKCk7CiAgICB9CgogIH0KfTsKY29uc3QgcGlja2VyT3B0cyA9IHsKICB0eXBlczogW3sKICAgIGRlc2NyaXB0aW9uOiAnSlNPTicsCiAgICBhY2NlcHQ6IHsKICAgICAgJ0pTT04vKic6IFsnLmpzb24nXQogICAgfQogIH1dLAogIGV4Y2x1ZGVBY2NlcHRBbGxPcHRpb246IHRydWUsCiAgbXVsdGlwbGU6IGZhbHNlCn07Cgphc3luYyBmdW5jdGlvbiBnZXRUaGVGaWxlKCkgewogIC8vIG9wZW4gZmlsZSBwaWNrZXIKICB2YXIgZmlsZUhhbmRsZSA9IG51bGw7CiAgW2ZpbGVIYW5kbGVdID0gYXdhaXQgd2luZG93LnNob3dPcGVuRmlsZVBpY2tlcihwaWNrZXJPcHRzKTsKICBjb25zb2xlLmxvZyhmaWxlSGFuZGxlKTsgLy8gZ2V0IGZpbGUgY29udGVudHMKCiAgY29uc3QgZmlsZURhdGEgPSBhd2FpdCBmaWxlSGFuZGxlLmdldEZpbGUoKTsKICBjb25zb2xlLmxvZygiRklMRSBEQVRBOiAiICsgZmlsZURhdGEubmFtZSk7CiAganNvbkRhdGEuY29tbWl0KCdjaGFuZ2VKU09OJywgZmlsZURhdGEpOyAvL2xvYWRGaWxlKCJ0ZXN0X2RhdGEvIiArIGZpbGVEYXRhLm5hbWUpOwp9IC8vanNvbkRhdGEuY29tbWl0KCdhZGROb2RlJywgb2JqICk7Ci8vc3JjXHRlc3RfZGF0YVxkYXRhX3Rlc3QuanNvbgovL0M6XFVzZXJzXEx1Y2FzIERpY2tzb25cRG93bmxvYWRzXGRhdGEtdG9vbHMtdnVlXHNyY1x0ZXN0X2RhdGFcZGF0YV90ZXN0Lmpzb24KLy8gZnVuY3Rpb24gbG9hZEZpbGUoZmlsZW5hbWUsIGN5KSB7Ci8vICAgLy8gdXNpbmcgUHJvbWlzZQovLyAgIGZldGNoKGZpbGVuYW1lLCB7Ci8vICAgICAgIGhlYWRlcnMgOiB7IAovLyAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCi8vICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJwovLyAgICAgICAgfQovLyAgICAgfSkKLy8gICAgIC50aGVuKHJlc3BvbnNlID0+IHsKLy8gICAgICAgY29uc29sZS5sb2coIkhFTFAiICsgcmVzcG9uc2UpOwovLyAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwovLyAgICAgfSkKLy8gICAgIC50aGVuKHBhcnNlZCA9PiB7Ci8vICAgICAgIGNvbnNvbGUubG9nKCJEQVRBIiArIHBhcnNlZCk7Ci8vICAgICAgIGN5Lmpzb24oeyBlbGVtZW50czogcGFyc2VkIH0pOwovLyAgICAgICB2YXIgbXlfbGF5b3V0ID0gY3kubWFrZUxheW91dCh7bmFtZTogJ2RhZ3JlJ30pOwovLyAgICAgICBteV9sYXlvdXQucnVuKCk7Ci8vICAgICB9KQovLyAgICAgLmNhdGNoKGVyciA9PiB7Ci8vICAgICAgIGNvbnNvbGUubG9nKCJFUlJPUiIgKyBlcnIpOwovLyAgICAgfSkKLy8gfQovLyBmdW5jdGlvbiBnZXRVUkxQYXJhbWV0ZXIobmFtZSkgewovLyAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoKG5ldyBSZWdFeHAoJ1s/fCZdJyArIG5hbWUgKyAnPScgKyAnKFteJjtdKz8pKCZ8I3w7fCQpJykuZXhlYyhsb2NhdGlvbi5zZWFyY2gpIHx8IFtudWxsLCAnJ10pWzFdLnJlcGxhY2UoL1wrL2csICclMjAnKSkgfHwgbnVsbDsKLy8gfQoKCmZ1bmN0aW9uIGltcG9zZUNvbnN0cmFpbnRzKGN5KSB7CiAgY3kub24oJ2FkZCcsICdlZGdlJywgZnVuY3Rpb24gKGV2dCkgewogICAgdmFyIGVkZ2UgPSBldnQudGFyZ2V0OwogICAgdmFyIGFsbF9lZGdlcyA9IGN5LmVkZ2VzKCJbc291cmNlID0gJyIgKyBlZGdlLnNvdXJjZSgpLmlkKCkgKyAiJ11bdGFyZ2V0ID0gJyIgKyBlZGdlLnRhcmdldCgpLmlkKCkgKyAiJ10iKTsKCiAgICBpZiAoYWxsX2VkZ2VzLmxlbmd0aCA+PSAyKSB7CiAgICAgIGN5LnJlbW92ZSgnIycgKyBlZGdlLmlkKCkpOwogICAgfSAvLyBpZiB3YW50IHRvIGFsbG93IGJpLWRpcmVjdGlvbmFsaXR5IGNvbW1lbnQgdGhlc2UgbGluZXMKCgogICAgdmFyIGFsbF9lZGdlc19pbnZlcnQgPSBjeS5lZGdlcygiW3RhcmdldCA9ICciICsgZWRnZS5zb3VyY2UoKS5pZCgpICsgIiddW3NvdXJjZSA9ICciICsgZWRnZS50YXJnZXQoKS5pZCgpICsgIiddIik7CgogICAgaWYgKGFsbF9lZGdlc19pbnZlcnQubGVuZ3RoID49IDEpIHsKICAgICAgY3kucmVtb3ZlKCcjJyArIGVkZ2UuaWQoKSk7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIHNhdmVKU09OKGRhdGEsIGZpbGVuYW1lKSB7CiAgaWYgKCFkYXRhKSB7CiAgICBjb25zb2xlLmVycm9yKCdObyBkYXRhJyk7CiAgICByZXR1cm47CiAgfQoKICBpZiAoIWZpbGVuYW1lKSBmaWxlbmFtZSA9ICdjb25zb2xlLmpzb24nOwoKICBpZiAodHlwZW9mIGRhdGEgPT09ICJvYmplY3QiKSB7CiAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSwgdW5kZWZpbmVkLCA0KTsKICB9CgogIHZhciBibG9iID0gbmV3IEJsb2IoW2RhdGFdLCB7CiAgICB0eXBlOiAndGV4dC9qc29uJwogIH0pLAogICAgICBlID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnRzJyksCiAgICAgIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgYS5kb3dubG9hZCA9IGZpbGVuYW1lOwogIGEuaHJlZiA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwogIGEuZGF0YXNldC5kb3dubG9hZHVybCA9IFsndGV4dC9qc29uJywgYS5kb3dubG9hZCwgYS5ocmVmXS5qb2luKCc6Jyk7CiAgZS5pbml0TW91c2VFdmVudCgnY2xpY2snLCB0cnVlLCBmYWxzZSwgd2luZG93LCAwLCAwLCAwLCAwLCAwLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgMCwgbnVsbCk7CiAgYS5kaXNwYXRjaEV2ZW50KGUpOwp9CgpmdW5jdGlvbiBtYWtlaWQobGVuZ3RoKSB7CiAgdmFyIHJlc3VsdCA9ICcnOwogIHZhciBjaGFyYWN0ZXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JzsKICB2YXIgY2hhcmFjdGVyc0xlbmd0aCA9IGNoYXJhY3RlcnMubGVuZ3RoOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkpOwogIH0KCiAgcmV0dXJuIHJlc3VsdDsKfQ=="},{"version":3,"sources":["CytoscapeGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"graph-container\">\n    <!-- \n   <p> Selected Node: {{ data.nodeS }} </p> \n   <p> Selected Node: {{ data.value }} </p> \n-->\n<b-container class=\"bv-example-row\">\n  <b-row>\n    <b-col>\n      <cytoscape\n      ref=\"cy\"\n      class=\"cy-graph\"\n      :preConfig=\"preConfig\"\n      :config=\"config\"\n      :afterCreated=\"afterCreated\"\n      v-on:cxttapend=\"addNode\"\n      >\n      <cy-element\n        v-for=\"element in elements\"\n        :definition=\"element\"\n        :key=\"`${element.data.id}`\"\n        :sync=\"true\"\n        v-on:mousedown=\"selectNode(element.data)\"\n      > \n      </cy-element>\n    </cytoscape>\n    </b-col>\n\n    <b-col col lg=\"2\">\n      <div>\n        <b-button block v-b-toggle.collapse-1 variant=\"primary\">Toggle Edit Menu</b-button>\n          <b-collapse id=\"collapse-1\" class=\"mt-2\" visible>\n            <b-form @submit=\"onSubmit\">\n            <label class=\"sr-only\" for=\"inline-form-input-name\">Node Name </label>\n\n    <b-form-input\n      id=\"inline-form-input-name\"\n      v-model=\"data.nodeS[0].name\"\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\n      :placeholder=\"data.nodeS[0].name.toString()\"\n    ></b-form-input>\n\n    <b-form-group label=\"Node Type\" v-slot=\"{ ariaDescribedby }\">\n      <b-form-radio-group\n        id=\"radio-group-2\"\n        v-model=\"data.nodeS[0].type\" \n        :aria-describedby=\"ariaDescribedby\"\n        name=\"radio-sub-component\"\n      >\n        <b-form-radio v-model=\"data.nodeS[0].type\" :aria-describedby=\"ariaDescribedby\" :name=\" data.nodeS[0].type\" value=\"Discrete\"> Discrete</b-form-radio>\n        <b-form-radio v-model=\"data.nodeS[0].type\" :aria-describedby=\"ariaDescribedby\" :name=\" data.nodeS[0].type\" value=\"Continuous\"> Continuous</b-form-radio>\n      </b-form-radio-group>\n    </b-form-group>\n\n    <div v-if=\"data.nodeS[0].type == 'Continuous'\">\n      <label class=\"sr-only\" for=\"inline-form-input-name\">Min</label>\n      <b-form-input\n        id=\"inline-form-input-name\"\n        v-model=\"data.nodeS[0].min\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        :placeholder=\"data.nodeS[0].min.toString()\"\n      ></b-form-input>\n\n      <label class=\"sr-only\" for=\"inline-form-input-name\">Max</label>\n      <b-form-input\n        id=\"inline-form-input-name\"\n        v-model=\"data.nodeS[0].max\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        :placeholder=\"data.nodeS[0].max.toString()\"\n      ></b-form-input>\n    </div>\n\n    <div v-else> \n      <label class=\"sr-only\" for=\"inline-form-input-name\">Level</label>\n      <b-form-input\n        id=\"inline-form-input-name\"\n        v-model=\"data.nodeS[0].min\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        :placeholder=\"data.nodeS[0].min.toString()\"\n      ></b-form-input>\n    </div>\n\n          </b-form>\n\n\n          <p></p>\n\n          <b-button variant=\"danger\" v-on:click=\"deleteNode(data.nodeS[0])\">Delete Node</b-button>\n        </b-collapse>\n      </div>\n    </b-col>\n  </b-row>\n</b-container>\n\n    <label for=\"range-2\">Generate Data From Graph</label>\n    <b-form-input id=\"range-2\" v-model=\"data.value\" v-on:click=\"changeGen(data.value)\" type=\"range\" min=\"50\" max=\"500\" step=\"50\" debounce=\"500\"></b-form-input>\n    <div class=\"mt-2\">Amount: {{ data.value }}</div>\n    \n    <b-button variant=\"success\"  v-on:click=\"generateData(data.value)\">Generate Data</b-button>\n<p></p>\n<b-button  v-on:click=\"test()\" variant=\"primary\"> Change JSON </b-button>\n    \n</div>\n</template>\n\n<script>\nimport dagre from \"cytoscape-dagre\";\nimport cxtmenu from \"cytoscape-cxtmenu\";\nimport edgehandles from \"cytoscape-edgehandles\";\nimport navigator from \"cytoscape-navigator\";\nimport panzoom from \"cytoscape-panzoom\";\nimport MY_JSON from '../test_data/data_lowes.json';\nimport { jsonData } from \"../data/data\"\nimport { selectedNode } from \"../data/selected\"\n//import { gen } from \"../data/gen\"\nimport JSONVUE from './JSON.vue'\nimport undoRedo from \"cytoscape-undo-redo\";\n\nimport dataGen from '../test_data/data_lowes.json'\nconst axios = require('axios').default\n\nexport default {\n  name: \"CytoscapeGraph\",\n  myJson: MY_JSON,\n  jsonVue: JSONVUE,\n  props: {\n    msg: String,\n  },\n  computed: {\n    cyInstance() {\n      return this.$refs.cy.instance;\n    },\n    // data() {\n    //   const nodeS = selectedNode.state.node\n    //   return [nodeS]\n    // },\n    data() {\n      return{\n        nodeS: [\n          selectedNode.state.node,\n        ],\n        gen: {Store: \"1\"},\n        value: selectedNode.state.amount\n      }\n    },\n    elements() {\n      const nodes = jsonData.state.json.nodes;\n      console.log(\"ELES\");\n      console.log(nodes);\n      const edges = jsonData.state.json.edges;\n      return [...nodes, ...edges];\n    },\n    config() {\n      return {\n        edit: '',\n        boxSelectionEnabled: false,\n        style: [\n          {\n            selector: \"node[name]\",\n            style: {\n              'content': 'data(name)',\n              'text-valign': 'center',\n              'text-halign': 'center'\n              \n            }\n          },\n          {\n            selector: ':parent',\n            css: {\n              'text-valign': 'center',\n              'text-halign': 'center',\n            }\n          },\n\n          {\n            selector: ':selected',\n            style: {\n              'background-color': 'blue',\n            }\n          },\n\n          {\n            selector: 'edge',\n            css: {\n              'curve-style': 'bezier',\n              'target-arrow-shape': 'triangle-tee'\n            }\n          },\n          {\n            selector: '.eh-handle',\n            style: {\n              'background-color': 'red',\n              'width': 12,\n              'height': 12,\n              'shape': 'ellipse',\n              'overlay-opacity': 0,\n              'border-width': 12, // makes handle easier to hit\n              'border-opacity': 0\n            }\n          },\n          {\n            selector: '.eh-hover',\n            style: {\n              'background-color': 'blue'\n            }\n          },\n          {\n            selector: '.eh-source',\n            style: {\n              'border-width': 2,\n              'border-color': 'blue'\n            }\n          },\n          {\n            selector: '.eh-target',\n            style: {\n              'border-width': 2,\n              'border-color': 'blue'\n            }\n          },\n          {\n            selector: '.eh-preview, .eh-ghost-edge',\n            style: {\n              'line-color': 'blue',\n              'target-arrow-color': 'blue',\n              'source-arrow-color': 'blue'\n            }\n          },\n          {\n            selector: '.eh-ghost-edge.eh-preview-active',\n            style: {\n              'opacity': 0\n          }\n        }\n        ],\n        layout: {\n          name: \"dagre\",\n        },\n      };\n    },\n  },\n  methods: {\n    preConfig(cytoscape) {\n      cytoscape.use(dagre);\n      cytoscape.use(cxtmenu);\n      cytoscape.use(edgehandles);\n      cytoscape.use(navigator);\n      cytoscape.use(panzoom);\n      cytoscape.use(undoRedo);\n    },\n    onSubmit(event) {\n        event.preventDefault()\n        console.log(this.data)\n        alert(JSON.stringify(this.form))\n    },\n    editBox(element) {\n      const h = this.$createElement\n      const messageNode = h('div', { class: ['foobar'] }, [\n        h('b-form', 'Hello')\n      ])\n      console.log(element)\n      this.edit = ''\n      this.$bvModal.msgBoxConfirm([messageNode])\n        .then(value => {\n          this.edit = value\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    },\n    selectNode(node) {\n      //console.log(node);\n      selectedNode.commit('changeNode', node );\n    },\n    changeGen(val) {\n      //console.log(val);\n      selectedNode.commit('changeGen', val );\n    },\n    test() {\n      getTheFile()\n    },\n    redraw(cy) {\n      var my_layout = cy.makeLayout({name: 'dagre'})\n      my_layout.run()\n    },\n    generateData(value){\n      console.log(value)\n      console.log(\"-------------------------------------\")\n      console.log(dataGen)\n      console.log(\"-------------------------------------\")\n      console.log(jsonData.getters.getNode)\n      //jsonData.commit('saveData')\n      \n      \n      axios\n      .post('http://127.0.0.1:8000/getData?no_samples=' + value, jsonData.getters.getNode)\n      .then(response => {\n        console.log(\"-----------------*******--------------------\")\n        console.log(response)\n        //console.log(response.data)\n        saveJSON(response.data, 'genData-' + value + '.json')\n        //jsonData.commit('addData', response)\n        //this.gen = response.data\n        //console.log(this.gen)\n        \n      })\n      .catch(error => {\n        console.log(error)\n      })\n      \n    },\n    deleteNode(node) {\n      //selectedNode.commit('changeNode', node );\n      console.log(\"DELETE\")\n      console.log(node.id)\n      //this.nodeS = null\n      //ur.do(\"remove\", selectedNode.state.node);\n      jsonData.commit('removeNode', node.id)\n    },\n    addNode(event) {\n      console.log(event.target, this.$refs.cy.instance);\n      console.log(event.position);\n    \n      if (event.target === this.$refs.cy.instance) {\n        console.log(\"adding node\", event.target);\n      }\n\n      var nodeid = 0\n      nodeid = makeid(5);\n\n      var obj = {\n        data: {\"id\": \"x_\" + nodeid, \"name\": \"New Node\", \"type\": \"nodeType\", \"min\": 0, \"max\": 0},\n        position: event.position\n      }\n\n      jsonData.commit('addNode', obj );\n      selectedNode.commit('changeNode', obj.data);\n    },\n    editNode(event, id) {\n      const ele = this.elements.some((ele, index) => {\n        console.log(ele.data.id)\n        console.log(id)\n        const match = ele.data.id == id\n        if (match) {\n          console.log(\"Index\" + index)\n          //jsonData.commit('removeNode', ele.id())\n        }\n        return match\n      })\n      console.log(event)\n    console.log(ele)\n    },\n    updateNode(event) {\n      console.log(event.target.data().label)\n      let label = event.target.data().label\n      label += label[0]\n      event.target.data({ label })\n    },\n    afterCreated(cy) {\n\n      //cy.makeLayout({name: 'dagre'}).run()\n\n      console.log(\"selectedNode\")\n      //var sel = selectedNode.getters.getNode \n      cy.pan({x: 300, y: 160})\n      cy.zoom(2)\n\n      var ur = cy.undoRedo({\n                    isDebug: true\n                });\n\n      //console.log(\"NEW JSON: \" + jsonData.state.json.nodes)\n      //console.log(\"NEW VUE: \")\n      //console.log(jsonVue)\n      //console.log(\"VUEX CALL ____ : \" + this.$jsonData)\n      //console.log(\"OLD JSON: \" + MY_JSON)\n\n      //var jsonFile = JSON.stringify(jsonData.state);\n      //var jsonFile = JSON.stringify(jsonData.state.json);\n      //var list = JSON.parse(jsonFile);\n      // cy.json({ elements: list });\n      // var my_layout = cy.makeLayout({name: 'dagre'});\n      // my_layout.run();\n\n      // cy.cxtmenu({\n      //     selector: 'node',\n      //     commands: [\n      //       {\n      //         content: 'Edit [N/A]',\n      //         select: function(ele){\n      //           var num \n      //           var currentName = ele._private.data.name\n      //           var editName = prompt(\"Please enter name\", \"New Name\")\n\n      //           jsonData.state.json.nodes.forEach((element, index) => {\n      //             console.log(\"CHAGE NAME INFO: \" + element.data.name)\n      //             console.log(\"CHAGE NAME INFO: \" + currentName)\n      //             console.log(\"NUM: \" + index)\n      //             if (currentName == element.data.name) {num = index}\n      //           });\n      //           console.log(\"CHAGE NUMBVER INFO: \" + num)\n                \n      //           ele.data('name', editName);\n      //           console.log(ele._private.data);\n      //           var payload = {'key1': editName, \"key2\": num}\n      //           jsonData.commit('changeName', payload );\n                \n      //         }\n      //       },\n      //       {\n      //         content: 'Delete',\n      //         select: function(ele){\n      //           console.log( ele );\n      //           //cy.remove('#' + ele.id());\n      //           jsonData.commit('removeNode', ele.id())\n      //         }\n      //       }, \n      //       {\n      //         content: 'Open',\n      //         select: function(ele){\n      //           console.log( ele.id() );\n      //           console.log( ele.data('name') );\n      //           //this.button()\n      //           this.$popup('append', 'foobar')\n      //           //alert( \"Name: \" + ele.data('name')  +\"\\nType: \" + ele.data('type'));\n      //         }\n      //       }\n      //     ]\n      //   });\n\n        cy.cxtmenu({\n          selector: 'core',\n          commands: [\n            // {\n            //   content: 'Add Node',\n            //   select: function(){\n            //     // TODO need to check whether this is unique\n            //     var nodeid = 0;\n            //     nodeid = makeid(5);\n                \n            //     // get mouse position\n            //     // TODO: make it work on touch screens\n            //     var e = window.event;\n            //     var pos = {x: e.offsetX, y: e.offsetY};\n            //     console.log(pos);\n\n            //     var nodeName = prompt(\"Please enter name\", \"Node\");\n            //     var nodeType = prompt(\"Please enter type\", \"Type\");\n\n            //     // cy.add({\n            //     //   \"group\": \"nodes\",\n            //     //   \"data\": {\"id\": \"x_\" + nodeid, \"name\": nodeName, \"type\": nodeType, \"min\": 0, \"max\": 0},\n            //     //   renderedPosition: pos\n            //     // })\n\n            //     var obj = {\n            //       data: {\"id\": \"x_\" + nodeid, \"name\": nodeName, \"type\": nodeType, \"min\": 0, \"max\": 0},\n            //       position: pos\n            //     }\n\n            //     console.log(obj);\n\n            //     //var payload = {'key1': obj}\n            //     jsonData.commit('addNode', obj );\n            //   }\n            // },\n            {\n              content: 'Redraw',\n              select: function(){\n                var my_layout = cy.makeLayout({name: 'dagre'})\n                my_layout.run()\n              }\n            },\n            {\n              content: 'Undo [N/A]',\n              select: function(){\n                console.log(\"UNDO: \");\n                console.log(ur);\n                \n                ur.undo();\n                //eles.restore();\n              }\n            },\n            {\n              content: 'Save JSON',\n              select: function(){\n                cy.remove('.eh-handle')\n                saveJSON(cy.json()['elements'], 'data_myData.json')\n              }\n            }\n          ]\n        });\n\n      cy.cxtmenu({\n          selector: 'edge',\n          commands: [\n            {\n              content: 'Invert',\n              select: function(ele){\n                console.log( ele.data('source') + '->' + ele.data('target') );\n                var ele_new = ele.clone();\n                ele_new.data().source = ele.data().target;\n                ele_new.data().target = ele.data().source;\n                cy.remove('#' + ele.id());\n                cy.add(ele_new)\n              },\n              //enabled: false\n            },\n            {\n              content: 'Delete',\n              select: function(ele){\n                console.log( ele.id() );\n                cy.remove('#' + ele.id());\n              }\n            }\n          ]\n        });\n\n      let eh = cy.edgehandles({\n          enabled: true\n        }); \n\n      if (this.$toggle) {\n        eh.enableDrawMode();\n      } else {\n        eh.disableDrawMode();\n      }\n      //eh.disableDrawMode();\n      \n      //eh.enable();\n\n      // cy.on('ehstart', (event, sourceNode) => {\n      //     console.log(\"HOVER: \" + event.posistion);\n      //     console.log(\"HOVER: \" + sourceNode);\n      // });\n\n      console.log(eh);\n\n      cy.navigator({\n          container: false, \n          viewLiveFramerate: 0, \n          thumbnailEventFramerate: 30, \n          thumbnailLiveFramerate: false, \n          dblClickDelay: 200, \n          removeCustomContainer: true, \n          rerenderDelay: 100       \n        });\n\n      cy.panzoom({\n        zoomFactor: 0.05, // zoom factor per zoom tick\n        zoomDelay: 45, // how many ms between zoom ticks\n        minZoom: 0.1, // min zoom level\n        maxZoom: 10, // max zoom level\n        fitPadding: 50, // padding when fitting\n        panSpeed: 10, // how many ms in between pan ticks\n        panDistance: 10, // max pan distance per tick\n        panDragAreaSize: 75, // the length of the pan drag box in which the vector for panning is calculated (bigger = finer control of pan speed and direction)\n        panMinPercentSpeed: 0.25, // the slowest speed we can pan by (as a percent of panSpeed)\n        panInactiveArea: 8, // radius of inactive area in pan drag box\n        panIndicatorMinOpacity: 0.5, // min opacity of pan indicator (the draggable nib); scales from this to 1.0\n        zoomOnly: false, // a minimal version of the ui only with zooming (useful on systems with bad mousewheel resolution)\n        fitSelector: undefined, // selector of elements to fit\n        animateOnFit: function(){ // whether to animate on fit\n          return false;\n        },\n        fitAnimationDuration: 1000, // duration of animation on fit\n\n        // icon class names\n        sliderHandleIcon: 'fa fa-minus',\n        zoomInIcon: 'fa fa-plus',\n        zoomOutIcon: 'fa fa-minus',\n        resetIcon: 'fa fa-expand'\n        }); \n\n      imposeConstraints(cy);\n\n      //this.cyInstance.makeLayout({ name: \"dagre\" }).run();\n    },\n  },\n};\n\nconst pickerOpts = {\n  types: [\n    {\n      description: 'JSON',\n      accept: {\n        'JSON/*': ['.json']\n      }\n    },\n  ],\n  excludeAcceptAllOption: true,\n  multiple: false\n};\n\nasync function getTheFile() {\n  // open file picker\n  var fileHandle = null;\n  [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n  console.log(fileHandle);\n\n  // get file contents\n  const fileData = await fileHandle.getFile();\n  console.log(\"FILE DATA: \" + fileData.name);\n\n  jsonData.commit('changeJSON', fileData)\n  //loadFile(\"test_data/\" + fileData.name);\n}\n\n\n//jsonData.commit('addNode', obj );\n\n//src\\test_data\\data_test.json\n//C:\\Users\\Lucas Dickson\\Downloads\\data-tools-vue\\src\\test_data\\data_test.json\n\n\n// function loadFile(filename, cy) {\n//   // using Promise\n//   fetch(filename, {\n//       headers : { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//        }\n//     })\n//     .then(response => {\n//       console.log(\"HELP\" + response);\n//       return response.json();\n//     })\n//     .then(parsed => {\n//       console.log(\"DATA\" + parsed);\n//       cy.json({ elements: parsed });\n//       var my_layout = cy.makeLayout({name: 'dagre'});\n//       my_layout.run();\n//     })\n//     .catch(err => {\n//       console.log(\"ERROR\" + err);\n//     })\n// }\n\n// function getURLParameter(name) {\n//   return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\\+/g, '%20')) || null;\n// }\n\nfunction imposeConstraints(cy) {\n  cy.on('add', 'edge', function(evt){\n    var edge = evt.target;\n    var all_edges = cy.edges(\"[source = '\" + edge.source().id()+\"'][target = '\" + edge.target().id() + \"']\");\n\n    if (all_edges.length >= 2) {\n      cy.remove('#' + edge.id());\n    }\n\n    // if want to allow bi-directionality comment these lines\n    var all_edges_invert = cy.edges(\"[target = '\" + edge.source().id()+\"'][source = '\" + edge.target().id() + \"']\");\n\n    if (all_edges_invert.length >= 1) {\n      cy.remove('#' + edge.id());\n    }\n  });\n}\n\nfunction saveJSON(data, filename){\n    if(!data) {\n        console.error('No data')\n        return;\n    }\n    if(!filename) filename = 'console.json'\n\n    if(typeof data === \"object\"){\n        data = JSON.stringify(data, undefined, 4)\n    }\n    var blob = new Blob([data], {type: 'text/json'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n\n    a.download = filename\n    a.href = window.URL.createObjectURL(blob)\n    a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':')\n    e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n    a.dispatchEvent(e)\n}\n\nfunction makeid(length) {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * \n    charactersLength));\n  }\n  return result;\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<!-- use ::v-deep and scoped css in real projects -->\n<style lang=\"scss\" >\n#cytoscape-div {\n  height: 100% !important;\n  min-height: unset !important;\n}\n\n.graph-container {\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cy-graph {\n  height: 600px;\n  width: 100%;\n  background: lightgrey;\n  border: 1px solid blue;\n  display: block;\n}\n</style>\n"],"sourceRoot":"src/components"}]}