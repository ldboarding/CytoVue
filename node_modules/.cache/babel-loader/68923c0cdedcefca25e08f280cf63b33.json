{"remainingRequest":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue","mtime":1634084799319},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CytoscapeGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"graph-container\">\n    <cytoscape\n      ref=\"cy\"\n      class=\"cy-graph\"\n      :preConfig=\"preConfig\"\n      :config=\"config\"\n      :afterCreated=\"afterCreated\"\n    >\n      <cy-element\n        v-on:click=\"button(element.data.name, element.data.type)\"\n        v-for=\"element in elements\"\n        :definition=\"element\"\n        :key=\"`${element.data.id}`\"\n      />\n    </cytoscape>\n    <v-btn block v-on:click=\"button()\"> Load File </v-btn>\n  </div>\n</template>\n\n<script>\nimport dagre from \"cytoscape-dagre\";\nimport cxtmenu from \"cytoscape-cxtmenu\";\nimport edgehandles from \"cytoscape-edgehandles\";\nimport navigator from \"cytoscape-navigator\";\nimport panzoom from \"cytoscape-panzoom\";\nimport MY_JSON from '../test_data/data_lowes.json';\nimport { jsonData } from \"../data/data\"\nimport JSONVUE from './JSON.vue'\n\nexport default {\n  name: \"CytoscapeGraph\",\n  myJson: MY_JSON,\n  jsonVue: JSONVUE,\n  props: {\n    msg: String,\n  },\n  components: {\n    \n  },\n  computed: {\n    cyInstance() {\n      return this.$refs.cy.instance;\n    },\n    elements() {\n      const nodes = jsonData.state.json.nodes;\n      console.log(\"NODES: \" + nodes);\n      //const edges = generateEdgesFromNodes(nodes);\n      return nodes;\n    },\n    config() {\n      return {\n        boxSelectionEnabled: false,\n        style: [\n          {\n            selector: \"node[name]\",\n            style: {\n              'content': 'data(name)',\n              'text-valign': 'center',\n              'text-halign': 'center',\n              'text-outline-width': 2,\n              'text-outline-color': '#888',\n              'background-color': '#888'\n            }\n          },\n          {\n            selector: ':parent',\n            css: {\n              'text-valign': 'center',\n              'text-halign': 'center',\n            }\n          },\n          {\n            selector: 'edge',\n            css: {\n              'curve-style': 'bezier',\n              'target-arrow-shape': 'triangle-tee'\n            }\n          },\n          {\n            selector: '.eh-handle',\n            style: {\n              'background-color': 'red',\n              'width': 12,\n              'height': 12,\n              'shape': 'ellipse',\n              'overlay-opacity': 0,\n              'border-width': 12, // makes handle easier to hit\n              'border-opacity': 0\n            }\n          },\n          {\n            selector: '.eh-hover',\n            style: {\n              'background-color': 'red',\n              'handlePosition': 'middle top'\n            }\n          },\n          {\n            selector: '.eh-source',\n            style: {\n              'border-width': 2,\n              'border-color': 'red'\n            }\n          },\n          {\n            selector: '.eh-target',\n            style: {\n              'border-width': 2,\n              'border-color': 'red'\n            }\n          },\n          {\n            selector: '.eh-preview, .eh-ghost-edge',\n            style: {\n              'background-color': 'red',\n              'line-color': 'red',\n              'target-arrow-color': 'red',\n              'source-arrow-color': 'red'\n            }\n          },\n          {\n            selector: '.eh-ghost-edge.eh-preview-active',\n            style: {\n              'opacity': 0\n          }\n        }\n        ],\n        layout: {\n          name: \"dagre\",\n        },\n      };\n    },\n  },\n  methods: {\n    preConfig(cytoscape) {\n      cytoscape.use(dagre);\n      cytoscape.use(cxtmenu);\n      cytoscape.use(edgehandles);\n      cytoscape.use(navigator);\n      cytoscape.use(panzoom);\n    },\n    draw: function () {\n      this.$toggle = !this.$toggle\n      console.log(\"DRAW CLICK: \" + this.$toggle)\n      //eh.disableDrawMode();\n    },\n    button() {\n      getTheFile()\n    },\n    afterCreated(cy) {\n      //await this.$nextTick();\n\n      console.log(\"NEW JSON: \" + jsonData.state.json.nodes)\n      console.log(\"NEW VUE: \")\n      console.log(JSONVUE)\n      console.log(\"NEW VUE: \")\n      //console.log(jsonVue)\n      //console.log(\"VUEX CALL ____ : \" + this.$jsonData)\n      //console.log(\"OLD JSON: \" + MY_JSON)\n\n      //var jsonFile = JSON.stringify(jsonData.state);\n\n      var jsonFile = JSON.stringify(jsonData.state.json);\n      var list = JSON.parse(jsonFile);\n\n      cy.json({ elements: list });\n      var my_layout = cy.makeLayout({name: 'dagre'});\n      my_layout.run();\n\n      cy.cxtmenu({\n          selector: 'node',\n          commands: [\n            {\n              content: 'Edit [N/A]',\n              select: function(ele){\n                var num \n                var currentName = ele._private.data.name\n                var editName = prompt(\"Please enter name\", \"New Name\")\n\n                jsonData.state.json.nodes.forEach((element, index) => {\n                  console.log(\"CHAGE NAME INFO: \" + element.data.name)\n                  console.log(\"CHAGE NAME INFO: \" + currentName)\n                  console.log(\"NUM: \" + index)\n                  if (currentName == element.data.name) {num = index}\n                });\n                console.log(\"CHAGE NUMBVER INFO: \" + num)\n                \n                ele.data('name', editName);\n                console.log(ele._private.data);\n                var payload = {'key1': editName, \"key2\": num}\n                jsonData.commit('changeName', payload );\n                \n              }\n            },\n            {\n              content: 'Delete',\n              select: function(ele){\n                console.log( ele );\n                //cy.remove('#' + ele.id());\n                jsonData.commit('removeNode', ele.id() );\n              }\n            }, \n            {\n              content: 'Open',\n              select: function(ele){\n                console.log( ele.id() );\n                console.log( ele.data('name') );\n                //this.button()\n                this.$popup('append', 'foobar')\n                //alert( \"Name: \" + ele.data('name')  +\"\\nType: \" + ele.data('type'));\n              }\n            }\n          ]\n        });\n\n        cy.cxtmenu({\n          selector: 'core',\n          commands: [\n            {\n              content: 'Add Node',\n              select: function(){\n                // TODO need to check whether this is unique\n                var nodeid = 0;\n                nodeid = makeid(5);\n                \n                // get mouse position\n                // TODO: make it work on touch screens\n                var e = window.event;\n                var pos = {x: e.offsetX, y: e.offsetY};\n                console.log(pos);\n\n                var nodeName = prompt(\"Please enter name\", \"Node\");\n                var nodeType = prompt(\"Please enter type\", \"Type\");\n\n                // cy.add({\n                //   \"group\": \"nodes\",\n                //   \"data\": {\"id\": \"x_\" + nodeid, \"name\": nodeName, \"type\": nodeType, \"min\": 0, \"max\": 0},\n                //   renderedPosition: pos\n                // })\n\n                var obj = {\n                  data: {\"id\": \"x_\" + nodeid, \"name\": nodeName, \"type\": nodeType, \"min\": 0, \"max\": 0},\n                  position: pos\n                }\n\n                console.log(obj);\n\n                //var payload = {'key1': obj}\n                jsonData.commit('addNode', obj );\n              }\n            },\n            {\n              content: 'Redraw',\n              select: function(){\n                var my_layout = cy.makeLayout({name: 'dagre'})\n                my_layout.run()\n              }\n            },\n            {\n              content: 'Undo [N/A]',\n              select: function(){\n                console.log( 'Undo: please implement me!' );\n              }\n            },\n            {\n              content: 'Save JSON',\n              select: function(){\n                cy.remove('.eh-handle')\n                saveJSON(cy.json()['elements'], 'data_myData.json')\n              }\n            },\n            {\n              content: 'Open JSON',\n              select: function(){\n                getTheFile();\n              }\n            }\n          ]\n        });\n\n      cy.cxtmenu({\n          selector: 'edge',\n          commands: [\n            {\n              content: 'Invert',\n              select: function(ele){\n                console.log( ele.data('source') + '->' + ele.data('target') );\n                var ele_new = ele.clone();\n                ele_new.data().source = ele.data().target;\n                ele_new.data().target = ele.data().source;\n                cy.remove('#' + ele.id());\n                cy.add(ele_new)\n              },\n              //enabled: false\n            },\n            {\n              content: 'Delete',\n              select: function(ele){\n                console.log( ele.id() );\n                cy.remove('#' + ele.id());\n              }\n            }\n          ]\n        });\n\n      let eh = cy.edgehandles({\n          enabled: true,\n          handlePosition: 'middle top'\n        }); \n\n      if (this.$toggle) {\n        eh.enableDrawMode();\n      } else {\n        eh.disableDrawMode();\n      }\n      //eh.disableDrawMode();\n      \n      //eh.enable();\n\n      cy.on('ehstart', (event, sourceNode) => {\n          console.log(\"HOVER: \" + event.posistion);\n          console.log(\"HOVER: \" + sourceNode);\n      });\n\n      console.log(eh);\n\n      cy.navigator({\n          container: false, \n          viewLiveFramerate: 0, \n          thumbnailEventFramerate: 30, \n          thumbnailLiveFramerate: false, \n          dblClickDelay: 200, \n          removeCustomContainer: true, \n          rerenderDelay: 100       \n        });\n\n      cy.panzoom({\n        zoomFactor: 0.05, // zoom factor per zoom tick\n        zoomDelay: 45, // how many ms between zoom ticks\n        minZoom: 0.1, // min zoom level\n        maxZoom: 10, // max zoom level\n  fitPadding: 50, // padding when fitting\n  panSpeed: 10, // how many ms in between pan ticks\n  panDistance: 10, // max pan distance per tick\n  panDragAreaSize: 75, // the length of the pan drag box in which the vector for panning is calculated (bigger = finer control of pan speed and direction)\n  panMinPercentSpeed: 0.25, // the slowest speed we can pan by (as a percent of panSpeed)\n  panInactiveArea: 8, // radius of inactive area in pan drag box\n  panIndicatorMinOpacity: 0.5, // min opacity of pan indicator (the draggable nib); scales from this to 1.0\n  zoomOnly: false, // a minimal version of the ui only with zooming (useful on systems with bad mousewheel resolution)\n  fitSelector: undefined, // selector of elements to fit\n  animateOnFit: function(){ // whether to animate on fit\n    return false;\n  },\n  fitAnimationDuration: 1000, // duration of animation on fit\n\n  // icon class names\n  sliderHandleIcon: 'fa fa-minus',\n  zoomInIcon: 'fa fa-plus',\n  zoomOutIcon: 'fa fa-minus',\n  resetIcon: 'fa fa-expand'\n  }); \n\n      imposeConstraints(cy);\n\n      //this.cyInstance.makeLayout({ name: \"dagre\" }).run();\n    },\n  },\n};\n\nconst pickerOpts = {\n  types: [\n    {\n      description: 'JSON',\n      accept: {\n        'JSON/*': ['.json']\n      }\n    },\n  ],\n  excludeAcceptAllOption: true,\n  multiple: false\n};\n\nasync function getTheFile() {\n  // open file picker\n  var fileHandle = null;\n  [fileHandle] = await window.showOpenFilePicker(pickerOpts);\n  console.log(fileHandle);\n\n  // get file contents\n  const fileData = await fileHandle.getFile();\n  console.log(\"FILE DATA: \" + fileData.name);\n\n  jsonData.commit('changeJSON', fileData)\n  //loadFile(\"test_data/\" + fileData.name);\n}\n\n\n//jsonData.commit('addNode', obj );\n\n//src\\test_data\\data_test.json\n//C:\\Users\\Lucas Dickson\\Downloads\\data-tools-vue\\src\\test_data\\data_test.json\n\n\n// function loadFile(filename, cy) {\n//   // using Promise\n//   fetch(filename, {\n//       headers : { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//        }\n//     })\n//     .then(response => {\n//       console.log(\"HELP\" + response);\n//       return response.json();\n//     })\n//     .then(parsed => {\n//       console.log(\"DATA\" + parsed);\n//       cy.json({ elements: parsed });\n//       var my_layout = cy.makeLayout({name: 'dagre'});\n//       my_layout.run();\n//     })\n//     .catch(err => {\n//       console.log(\"ERROR\" + err);\n//     })\n// }\n\n// function getURLParameter(name) {\n//   return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [null, ''])[1].replace(/\\+/g, '%20')) || null;\n// }\n\nfunction imposeConstraints(cy) {\n  cy.on('add', 'edge', function(evt){\n    var edge = evt.target;\n    var all_edges = cy.edges(\"[source = '\" + edge.source().id()+\"'][target = '\" + edge.target().id() + \"']\");\n\n    if (all_edges.length >= 2) {\n      cy.remove('#' + edge.id());\n    }\n\n    // if want to allow bi-directionality comment these lines\n    var all_edges_invert = cy.edges(\"[target = '\" + edge.source().id()+\"'][source = '\" + edge.target().id() + \"']\");\n\n    if (all_edges_invert.length >= 1) {\n      cy.remove('#' + edge.id());\n    }\n  });\n}\n\nfunction saveJSON(data, filename){\n    if(!data) {\n        console.error('No data')\n        return;\n    }\n    if(!filename) filename = 'console.json'\n\n    if(typeof data === \"object\"){\n        data = JSON.stringify(data, undefined, 4)\n    }\n    var blob = new Blob([data], {type: 'text/json'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n\n    a.download = filename\n    a.href = window.URL.createObjectURL(blob)\n    a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':')\n    e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n    a.dispatchEvent(e)\n}\n\nfunction makeid(length) {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * \n    charactersLength));\n  }\n  return result;\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<!-- use ::v-deep and scoped css in real projects -->\n<style lang=\"scss\" >\n#cytoscape-div {\n  height: 100% !important;\n  min-height: unset !important;\n}\n\n.graph-container {\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cy-graph {\n  height: 400px;\n  width: 100%;\n  background: lightgreen;\n  border: 1px solid darkgreen;\n  display: block;\n}\n</style>\n"],"sourceRoot":"src/components"}]}