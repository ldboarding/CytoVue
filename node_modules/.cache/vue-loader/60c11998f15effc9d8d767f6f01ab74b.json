{"remainingRequest":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\src\\components\\CytoscapeGraph.vue","mtime":1634084525422},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lucas Dickson\\Downloads\\CytoVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojY3l0b3NjYXBlLWRpdiB7CiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7CiAgbWluLWhlaWdodDogdW5zZXQgIWltcG9ydGFudDsKfQoKLmdyYXBoLWNvbnRhaW5lciB7CiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi5jeS1ncmFwaCB7CiAgaGVpZ2h0OiA0MDBweDsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7CiAgYm9yZGVyOiAxcHggc29saWQgcmVkOwogIGRpc3BsYXk6IGJsb2NrOwp9Cg=="},{"version":3,"sources":["CytoscapeGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CytoscapeGraph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"graph-container\">\n    <cytoscape\n      ref=\"cy\"\n      class=\"cy-graph\"\n      :preConfig=\"preConfig\"\n      :config=\"config\"\n      :afterCreated=\"afterCreated\"\n    >\n      <cy-element\n        v-for=\"element in elements\"\n        :definition=\"element\"\n        :key=\"`${element.data.id}`\"\n      />\n    </cytoscape>\n    <v-btn block> Block Button </v-btn>\n    <Card />\n  </div>\n</template>\n\n<script>\nimport dagre from \"cytoscape-dagre\";\nimport Card from \"./Card\";\n\nconst generateNodes = ({ amount }) =>\n  Array.from({ length: amount }).map((_, index) => ({\n    group: \"nodes\",\n    data: {\n      id: `node-${index}`,\n    },\n  }));\n\nconst generateEdgesFromNodes = (nodes) =>\n  nodes.slice(1, nodes.length).map((node, index) => ({\n    group: \"edges\",\n    data: {\n      id: `${node.data.id}-${index + 1}`,\n      source: node.data.id,\n      target: `node-0`,\n    },\n  }));\n\nexport default {\n  name: \"CytoscapeGraph\",\n  props: {\n    msg: String,\n  },\n  components: {\n    Card,\n  },\n  computed: {\n    cyInstance() {\n      return this.$refs.cy.instance;\n    },\n    elements() {\n      const nodes = generateNodes({ amount: 10 });\n      const edges = generateEdgesFromNodes(nodes);\n      return [...nodes, ...edges];\n    },\n    config() {\n      return {\n        style: [\n          {\n            selector: \"node\",\n            style: {\n              shape: \"hexagon\",\n              \"background-color\": \"red\",\n              label: \"data(id)\",\n            },\n          },\n        ],\n        layout: {\n          name: \"dagre\",\n        },\n      };\n    },\n  },\n  methods: {\n    preConfig(cytoscape) {\n      cytoscape.use(dagre);\n    },\n\n    async afterCreated(cy) {\n      await this.$nextTick();\n      console.log(cy)\n\n      this.cyInstance.makeLayout({ name: \"dagre\" }).run();\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<!-- use ::v-deep and scoped css in real projects -->\n<style lang=\"scss\" >\n#cytoscape-div {\n  height: 100% !important;\n  min-height: unset !important;\n}\n\n.graph-container {\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cy-graph {\n  height: 400px;\n  width: 100%;\n  background: lightblue;\n  border: 1px solid red;\n  display: block;\n}\n</style>\n"]}]}